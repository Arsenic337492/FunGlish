// Firebase –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
const firebaseConfig = {
    apiKey: "AIzaSyDxdOy1x8p7X32GBRsvquW6D2cn0xfbOBY",
    authDomain: "funglish-f72b1.firebaseapp.com",
    projectId: "funglish-f72b1",
    storageBucket: "funglish-f72b1.firebasestorage.app",
    messagingSenderId: "902036164648",
    appId: "1:902036164648:web:6548ff003949716145a51d",
    measurementId: "G-M8SDMJ3H9D"
};

let auth;
let db;

function showAvatarMenu(event) {
    event.stopPropagation();
    const menu = event.currentTarget.nextElementSibling;
    menu.style.display = menu.style.display === 'block' ? 'none' : 'block';
}

function viewAvatar() {
    alert('–ü—Ä–æ—Å–º–æ—Ç—Ä –∞–≤–∞—Ç–∞—Ä–∞ - –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ');
}

function changeAvatar() {
    alert('–ò–∑–º–µ–Ω–µ–Ω–∏–µ –∞–≤–∞—Ç–∞—Ä–∞ - –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ');
}

function deleteAvatar() {
    alert('–£–¥–∞–ª–µ–Ω–∏–µ –∞–≤–∞—Ç–∞—Ä–∞ - –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ');
}

function showAchievements() {
    // –ó–∞–∫—Ä—ã–≤–∞–µ–º —Å–∞–π–¥–±–∞—Ä
    const overlay = document.querySelector('.profile-sidebar-overlay');
    const sidebar = document.querySelector('.profile-sidebar');
    overlay.classList.remove('active');
    sidebar.classList.remove('active');

    // –°–æ–∑–¥–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π
    const modalOverlay = document.createElement('div');
    modalOverlay.className = 'modal-overlay';
    
    const modal = document.createElement('div');
    modal.className = 'achievements-modal';
    modal.innerHTML = '<h2>–î–æ—Å—Ç–∏–∂–µ–Ω–∏—è</h2>';
    
    modalOverlay.appendChild(modal);
    document.body.appendChild(modalOverlay);
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
    setTimeout(() => modalOverlay.classList.add('active'), 0);
    
    // –ó–∞–∫—Ä—ã—Ç–∏–µ –ø—Ä–∏ –∫–ª–∏–∫–µ –≤–Ω–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
    modalOverlay.addEventListener('click', (e) => {
        if (e.target === modalOverlay) {
            modalOverlay.classList.remove('active');
            setTimeout(() => modalOverlay.remove(), 300);
        }
    });
}

function showSettings() {
    // –ó–∞–∫—Ä—ã–≤–∞–µ–º —Å–∞–π–¥–±–∞—Ä
    const overlay = document.querySelector('.profile-sidebar-overlay');
    const sidebar = document.querySelector('.profile-sidebar');
    overlay.classList.remove('active');
    sidebar.classList.remove('active');

    // –°–æ–∑–¥–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –Ω–∞—Å—Ç—Ä–æ–µ–∫
    const modalOverlay = document.createElement('div');
    modalOverlay.className = 'modal-overlay';
    
    const modal = document.createElement('div');
    modal.className = 'settings-modal';
    modal.innerHTML = '<h2>–ù–∞—Å—Ç—Ä–æ–π–∫–∏</h2>';
    
    modalOverlay.appendChild(modal);
    document.body.appendChild(modalOverlay);
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
    setTimeout(() => modalOverlay.classList.add('active'), 0);
    
    // –ó–∞–∫—Ä—ã—Ç–∏–µ –ø—Ä–∏ –∫–ª–∏–∫–µ –≤–Ω–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
    modalOverlay.addEventListener('click', (e) => {
        if (e.target === modalOverlay) {
            modalOverlay.classList.remove('active');
            setTimeout(() => modalOverlay.remove(), 300);
        }
    });
}

document.addEventListener('click', function(event) {
    const menus = document.querySelectorAll('.avatar-menu');
    menus.forEach(menu => {
        if (!menu.contains(event.target) && !event.target.matches('.avatar')) {
            menu.style.display = 'none';
        }
    });
});

document.addEventListener('DOMContentLoaded', function() {
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Firebase
    if (!firebase.apps.length) {
        firebase.initializeApp(firebaseConfig);
    }
    auth = firebase.auth();
    db = firebase.firestore();

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –¥–ª—è —Å–∞–π–¥–±–∞—Ä–∞
    const sidebarLinks = document.querySelectorAll('.tree-view a');
    const lessonContent = document.getElementById('lesson-content');

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–ª–∏–∫–æ–≤ –ø–æ —Å—Å—ã–ª–∫–∞–º
    sidebarLinks.forEach(link => {
        link.addEventListener('click', function(e) {
            e.preventDefault();
            
            // –£–±–∏—Ä–∞–µ–º –∞–∫—Ç–∏–≤–Ω—ã–π –∫–ª–∞—Å—Å —É –≤—Å–µ—Ö —Å—Å—ã–ª–æ–∫
            sidebarLinks.forEach(l => l.classList.remove('active'));
            // –î–æ–±–∞–≤–ª—è–µ–º –∞–∫—Ç–∏–≤–Ω—ã–π –∫–ª–∞—Å—Å —Ç–µ–∫—É—â–µ–π —Å—Å—ã–ª–∫–µ
            this.classList.add('active');

            // –ü–æ–ª—É—á–∞–µ–º ID –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –∏–∑ data-–∞—Ç—Ä–∏–±—É—Ç–∞
            const contentId = this.getAttribute('data-content-id');
            
            // –û—Ç–æ–±—Ä–∞–∂–∞–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π –∫–æ–Ω—Ç–µ–Ω—Ç
            if (contentById[contentId]) {
                lessonContent.innerHTML = contentById[contentId];
            }
        });
    });

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–æ—Ä–º—ã –≤—Ö–æ–¥–∞
    const loginForm = document.querySelector('.login-form');
    if (loginForm) {
        loginForm.addEventListener('submit', async (e) => {
            e.preventDefault();
            
            const submitButton = loginForm.querySelector('button.button-submit');
            const emailInput = loginForm.querySelector('.inputForm input[type="text"]');
            const passwordInput = loginForm.querySelector('.inputForm input[type="password"]');

            if (submitButton) submitButton.disabled = true;
              try {
                console.log('–ü–æ–ø—ã—Ç–∫–∞ –≤—Ö–æ–¥–∞...');
                const userCredential = await auth.signInWithEmailAndPassword(emailInput.value, passwordInput.value);
                if (userCredential.user) {
                    console.log('–£—Å–ø–µ—à–Ω—ã–π –≤—Ö–æ–¥:', {
                        email: userCredential.user.email,
                        uid: userCredential.user.uid,
                        metadata: {
                            lastSignInTime: userCredential.user.metadata.lastSignInTime,
                            creationTime: userCredential.user.metadata.creationTime
                        }
                    });                    document.getElementById('authModal').classList.remove('active');
                }
            } catch (error) {
                alert(error.message);
            } finally {
                if (submitButton) submitButton.disabled = false;
            }
        });
    }

    // –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
    auth.onAuthStateChanged(user => {
        const loginButtons = document.querySelectorAll('.login-button');
        loginButtons.forEach(button => {
            if (user) {
                button.innerHTML = `
                    <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                        <path d="M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2"></path>
                        <circle cx="12" cy="7" r="4"></circle>
                    </svg>
                    –ü—Ä–æ—Ñ–∏–ª—å
                `;
                button.onclick = () => {
                    let overlay = document.querySelector('.profile-sidebar-overlay');
                    let sidebar = document.querySelector('.profile-sidebar');
                    
                    if (!overlay) {
                        overlay = document.createElement('div');
                        overlay.className = 'profile-sidebar-overlay';
                        document.body.appendChild(overlay);
                    }
                    
                    if (!sidebar) {
                        sidebar = document.createElement('div');
                        sidebar.className = 'profile-sidebar';
                        sidebar.innerHTML = `
                            <div class="profile-header">
                                <div class="profile-top">
                                    <div class="avatar">üë§</div>
                                    <div class="user-info">
                                        <h3>–ù–∏–∫–Ω–µ–π–º</h3>
                                    </div>
                                    <button class="logout-icon" onclick="auth.signOut().then(() => window.location.reload())">
                                        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor">
                                            <path d="M9 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h4"></path>
                                            <polyline points="16 17 21 12 16 7"></polyline>
                                            <line x1="21" y1="12" x2="9" y2="12"></line>
                                        </svg>
                                    </button>
                                </div>

                                <div class="progress-section">
                                    <div class="progress-bar">
                                        <div class="progress" style="width: 45%"></div>
                                    </div>
                                    <div class="progress-stats">
                                        <span>45% –ø—Ä–æ–π–¥–µ–Ω–æ</span>
                                        <span>55% –æ—Å—Ç–∞–ª–æ—Å—å</span>
                                    </div>
                                </div>
                            </div>
                            
                            <div class="profile-stats">
                                <div class="stat-item">
                                    <span class="stat-value">12</span>
                                    <span class="stat-label">–ü—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤ –ø–æ–¥—Ä—è–¥</span>
                                </div>
                                <div class="stat-item">
                                    <span class="stat-value">3</span>
                                    <span class="stat-label">–î–Ω–µ–π –ø–æ–¥—Ä—è–¥</span>
                                </div>
                                <div class="stat-item">
                                    <span class="stat-value">75%</span>
                                    <span class="stat-label">–¢–æ—á–Ω–æ—Å—Ç—å –æ—Ç–≤–µ—Ç–æ–≤</span>
                                </div>
                                <div class="stat-item">
                                    <span class="stat-value">2:30</span>
                                    <span class="stat-label">–í—Ä–µ–º—è –æ–±—É—á–µ–Ω–∏—è</span>
                                </div>
                            </div>

                            <div class="profile-actions">                                <button class="action-button achievements-btn" onclick="showAchievements()">
                                    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor">
                                        <path d="M12 15a3 3 0 1 0 0-6 3 3 0 0 0 0 6Z"></path>
                                        <path d="M19 15V9"></path>
                                        <path d="M5 15V9"></path>
                                        <path d="M19.8 9c0-1-.8-1.9-1.8-1.9H6c-1 0-1.8.9-1.8 1.9m15.6 0c0 4.4-3.6 8-8 8s-8-3.6-8-8"></path>
                                    </svg>
                                    –î–æ—Å—Ç–∏–∂–µ–Ω–∏—è
                                </button>
                                <button class="action-button settings-btn" onclick="showSettings()">
                                    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor">
                                        <path d="M12.22 2h-.44a2 2 0 0 0-2 2v.18a2 2 0 0 1-1 1.73l-.43.25a2 2 0 0 1-2 0l-.15-.08a2 2 0 0 0-2.73.73l-.22.38a2 2 0 0 0 .73 2.73l.15.1a2 2 0 0 1 1 1.72v.51a2 2 0 0 1-1 1.74l-.15.09a2 2 0 0 0-.73 2.73l.22.38a2 2 0 0 0 2.73.73l.15-.08a2 2 0 0 1 2 0l.43.25a2 2 0 0 1 1 1.73V20a2 2 0 0 0 2 2h.44a2 2 0 0 0 2-2v-.18a2 2 0 0 1 1-1.73l.43-.25a2 2 0 0 1 2 0l.15.08a2 2 0 0 0 2.73-.73l.22-.39a2 2 0 0 0-.73-2.73l-.15-.08a2 2 0 0 1-1-1.74v-.5a2 2 0 0 1 1-1.74l.15-.09a2 2 0 0 0 .73-2.73l-.22-.38a2 2 0 0 0-2.73-.73l-.15.08a2 2 0 0 1-2 0l-.43-.25a2 2 0 0 1-1-1.73V4a2 2 0 0 0-2-2z"></path>
                                        <circle cx="12" cy="12" r="3"></circle>
                                    </svg>
                                    –ù–∞—Å—Ç—Ä–æ–π–∫–∏
                                </button>
                            </div>
                        `;
                        document.body.appendChild(sidebar);
                    }
                    
                    overlay.classList.add('active');
                    sidebar.classList.add('active');
                    
                    overlay.onclick = () => {
                        overlay.classList.remove('active');
                        sidebar.classList.remove('active');
                    };
                };
            } else {
                button.innerHTML = `
                    <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor">
                        <path d="M15 3H19C19.5304 3 20.0391 3.21071 20.4142 3.58579C20.7893 3.96086 21 4.46957 21 5V19C21 19.5304 20.7893 20.0391 20.4142 20.4142C20.0391 20.7893 19.5304 21 19 21H15"/>
                        <path d="M10 17L15 12L10 7"/>
                        <path d="M15 12H3"/>
                    </svg>
                    –í—Ö–æ–¥
                `;
                button.onclick = showLoginModal;
            }
        });
    });
});

// –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ—Ç–≤–µ—Ç–∞ –≤ —Ç–µ—Å—Ç–∞—Ö
function checkAnswer(button) {
    const buttons = button.parentElement.getElementsByTagName('button');
    for (let btn of buttons) {
        btn.disabled = true;
        if (btn.getAttribute('data-correct') === 'true') {
            btn.style.background = '#4caf50';
            btn.style.color = 'white';
        }
    }
    
    if (button.getAttribute('data-correct') === 'true') {
        button.insertAdjacentHTML('beforeend', ' ‚úì');
    } else {
        button.style.background = '#f44336';
        button.style.color = 'white';
        button.insertAdjacentHTML('beforeend', ' ‚úó');
    }
}

// –ö–æ–Ω—Ç–µ–Ω—Ç –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Ä–∞–∑–¥–µ–ª–æ–≤
const contentById = {
    'animals-material': `
        <div class="word-card">
            <div class="word-header">
                <h2>Cat / –ö–æ—à–∫–∞</h2>
            </div>
            <div class="word-image">
                <img src="https://placekitten.com/350/350" alt="Cat">
            </div>
            <div class="word-content">
                <h3>–ê—Å—Å–æ—Ü–∏–∞—Ü–∏–∏:</h3>
                <ul>
                    <li>–ö–≠–¢ - –ö–û–¢ (—Å–æ–∑–≤—É—á–Ω–æ)</li>
                    <li>CAT - –ö–û–¢ (–ø–µ—Ä–≤—ã–µ –±—É–∫–≤—ã –ø–æ—Ö–æ–∂–∏)</li>
                </ul>
                <button class="next-word">–°–ª–µ–¥—É—é—â–µ–µ —Å–ª–æ–≤–æ ‚Üí</button>
            </div>
        </div>
    `,
    'animals-test': `
        <div class="test-container">
            <h2>–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ: –ñ–∏–≤–æ—Ç–Ω—ã–µ</h2>
            <div class="progress">–í–æ–ø—Ä–æ—Å 1 –∏–∑ 5</div>
            <div class="question">
                <h3>–ö–∞–∫ –ø–µ—Ä–µ–≤–æ–¥–∏—Ç—Å—è —Å–ª–æ–≤–æ "Cat"?</h3>
                <div class="answers">
                    <button onclick="checkAnswer(this)" data-correct="true">–ö–æ—à–∫–∞</button>
                    <button onclick="checkAnswer(this)">–°–æ–±–∞–∫–∞</button>
                    <button onclick="checkAnswer(this)">–ü—Ç–∏—Ü–∞</button>
                    <button onclick="checkAnswer(this)">–†—ã–±–∞</button>
                </div>
            </div>
        </div>
    `,
    'food-material': `
        <div class="word-card">
            <div class="word-header">
                <h2>Apple / –Ø–±–ª–æ–∫–æ</h2>
            </div>
            <div class="word-image">
                <img src="https://images.unsplash.com/photo-1560806887-1e4cd0b6cbd6" alt="Apple">
            </div>
            <div class="word-content">
                <h3>–ê—Å—Å–æ—Ü–∏–∞—Ü–∏–∏:</h3>
                <ul>
                    <li>APPLE - –≠–ü–ü–õ (–∫–æ–º–ø–∞–Ω–∏—è Apple)</li>
                    <li>–Ø–±–ª–æ–∫–æ –≤ –ª–æ–≥–æ—Ç–∏–ø–µ Apple</li>
                </ul>
                <button class="next-word">–°–ª–µ–¥—É—é—â–µ–µ —Å–ª–æ–≤–æ ‚Üí</button>
            </div>
        </div>
    `,
    'food-test': `
        <div class="test-container">
            <h2>–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ: –ï–¥–∞</h2>
            <div class="progress">–í–æ–ø—Ä–æ—Å 1 –∏–∑ 5</div>
            <div class="question">
                <h3>–ö–∞–∫ –ø–µ—Ä–µ–≤–æ–¥–∏—Ç—Å—è —Å–ª–æ–≤–æ "Apple"?</h3>
                <div class="answers">
                    <button onclick="checkAnswer(this)" data-correct="true">–Ø–±–ª–æ–∫–æ</button>
                    <button onclick="checkAnswer(this)">–ë–∞–Ω–∞–Ω</button>
                    <button onclick="checkAnswer(this)">–ê–ø–µ–ª—å—Å–∏–Ω</button>
                    <button onclick="checkAnswer(this)">–ì—Ä—É—à–∞</button>
                </div>
            </div>
        </div>
    `
};
